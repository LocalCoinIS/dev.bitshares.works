<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1asset__claim__pool__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::asset_claim_pool_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1chain_1_1base__operation" prot="public" virt="non-virtual">graphene::chain::base_operation</basecompoundref>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1asset__claim__pool__operation_1_1fee__parameters__type" prot="public">graphene::chain::asset_claim_pool_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__claim__pool__operation_1aeb31659157cac407265c120200205b5d" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::asset_claim_pool_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="497" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__claim__pool__operation_1ad991416d754aea37c9ced62f774e9186" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::asset_claim_pool_operation::issuer</definition>
        <argsstring></argsstring>
        <name>issuer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="498" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__claim__pool__operation_1a651219f3453282bf17a58bc580b7c43e" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a8719a403aa47e9d369890c01d60d0bb2" kindref="member">asset_id_type</ref></type>
        <definition>asset_id_type graphene::chain::asset_claim_pool_operation::asset_id</definition>
        <argsstring></argsstring>
        <name>asset_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="499" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__claim__pool__operation_1ac0d4abdd5eec72c73476da9d9d234e79" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::asset_claim_pool_operation::amount_to_claim</definition>
        <argsstring></argsstring>
        <name>amount_to_claim</name>
        <briefdescription>
<para>fee.asset_id must != asset_id </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="500" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__claim__pool__operation_1aff30d50415f7699532055f15a41e3dba" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gae0096750377f6e9d61dba5765284de99" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::chain::asset_claim_pool_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
<para>core asset </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="501" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="501" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1asset__claim__pool__operation_1a80eceffa2a0856c994f7c1b62e0b0ead" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::asset_claim_pool_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="503" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="503" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1asset__claim__pool__operation_1ab57257904543f3d9ce079d3fc903fe45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::asset_claim_pool_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="504" column="1" bodyfile="libraries/chain/protocol/asset_ops.cpp" bodystart="246" bodyend="251"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Transfers LLC from the fee pool of a specified asset back to the issuer&apos;s balance. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fee</parametername>
</parameternamelist>
<parameterdescription>
<para>Payment for the operation execution </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>issuer</parametername>
</parameternamelist>
<parameterdescription>
<para>Account which will be used for transfering LLC </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>asset_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Id of the asset whose fee pool is going to be drained </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amount_to_claim</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of LLC to claim from the fee pool </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extensions</parametername>
</parameternamelist>
<parameterdescription>
<para>Field for future expansion</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1chain_1_1asset__claim__pool__operation_1aeb31659157cac407265c120200205b5d" kindref="member">fee</ref> must be paid in the asset other than the one whose pool is being drained </para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1chain_1_1asset__claim__pool__operation_1ac0d4abdd5eec72c73476da9d9d234e79" kindref="member">amount_to_claim</ref> should be specified in the core asset </para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1chain_1_1asset__claim__pool__operation_1ac0d4abdd5eec72c73476da9d9d234e79" kindref="member">amount_to_claim</ref> should be nonnegative </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="493">
        <label>graphene::chain::asset_claim_pool_operation</label>
        <link refid="structgraphene_1_1chain_1_1asset__claim__pool__operation"/>
        <childnode refid="494" relation="public-inheritance">
        </childnode>
      </node>
      <node id="494">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="495">
        <label>graphene::chain::asset_claim_pool_operation</label>
        <link refid="structgraphene_1_1chain_1_1asset__claim__pool__operation"/>
        <childnode refid="496" relation="public-inheritance">
        </childnode>
        <childnode refid="497" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="498" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>amount_to_claim</edgelabel>
        </childnode>
      </node>
      <node id="497">
        <label>flat_set&lt; future_extensions &gt;</label>
      </node>
      <node id="496">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="498">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="499" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="499">
        <label>safe&lt; int64_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="492" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="491" bodyend="505"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1asset__claim__pool__operation_1ac0d4abdd5eec72c73476da9d9d234e79" prot="public" virt="non-virtual"><scope>graphene::chain::asset_claim_pool_operation</scope><name>amount_to_claim</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__claim__pool__operation_1a651219f3453282bf17a58bc580b7c43e" prot="public" virt="non-virtual"><scope>graphene::chain::asset_claim_pool_operation</scope><name>asset_id</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a8947f5ff3ea0458c7fe981b5bb9e82b7" prot="public" virt="non-virtual"><scope>graphene::chain::asset_claim_pool_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a18b678eb05bc5b30d75f10b398c07a91" prot="public" virt="non-virtual"><scope>graphene::chain::asset_claim_pool_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__claim__pool__operation_1aff30d50415f7699532055f15a41e3dba" prot="public" virt="non-virtual"><scope>graphene::chain::asset_claim_pool_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__claim__pool__operation_1aeb31659157cac407265c120200205b5d" prot="public" virt="non-virtual"><scope>graphene::chain::asset_claim_pool_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__claim__pool__operation_1a80eceffa2a0856c994f7c1b62e0b0ead" prot="public" virt="non-virtual"><scope>graphene::chain::asset_claim_pool_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a1d398b2f68e1dca5f453b86655a64c41" prot="public" virt="non-virtual"><scope>graphene::chain::asset_claim_pool_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1ac7e2861a01bbaef8fbe5c5dcf5e73b38" prot="public" virt="non-virtual"><scope>graphene::chain::asset_claim_pool_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aff6e2d2b66117c8c87f6a6e7e7ddba1f" prot="public" virt="non-virtual"><scope>graphene::chain::asset_claim_pool_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__claim__pool__operation_1ad991416d754aea37c9ced62f774e9186" prot="public" virt="non-virtual"><scope>graphene::chain::asset_claim_pool_operation</scope><name>issuer</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__claim__pool__operation_1ab57257904543f3d9ce079d3fc903fe45" prot="public" virt="non-virtual"><scope>graphene::chain::asset_claim_pool_operation</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
